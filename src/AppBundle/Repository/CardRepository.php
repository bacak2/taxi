<?php

namespace AppBundle\Repository;
use AppBundle\Service\HelperService;
use Doctrine\Common\Persistence\Mapping\ClassMetadata;
use Doctrine\DBAL\DBALException;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\EntityManagerInterface;
use PDO;

/**
 * DriverRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CardRepository extends \Doctrine\ORM\EntityRepository
{
    private $pdo;

    /**
     * CardRepository constructor.
     */
    public function __construct(EntityManagerInterface $em, ClassMetadata $class)
    {
        parent::__construct($em, $class);
        $this->pdo = $this->getEntityManager()->getConnection();
    }

    public function findCardByClient($clientId)
    {
        $sql = "SELECT c.pan, c.card_type cardType, c.department, concat(round((c.discount*100),1),'%') discount, 
          date_format(c.valid_until, '%Y-%m-%d') as validUntil, c.status, 
          c.daily_limit dailyLimit, c.monthly_limit monthlyLimit 
            FROM card c 
            WHERE 1=1 
              AND c.client_id = :client_id";
        $stmt = $this->pdo->prepare($sql);
        $stmt->execute(array(
            "client_id" => $clientId
        ));
        $result = array();
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC))
        {
            $row['isActive'] = HelperService::getCardStatus($row['status']);
            $result[] = $row;
        }

        return $result;
    }

    public function findCard($params = array())
    {
        $date = new \DateTime();
        $date->sub(new \DateInterval('P366D'));
        $sql = "SELECT 
            c.id, c.pan, f.name as firm_name, c.department, concat(p.first_name,' ',p.surname) name, 
            d.value as type, di.value as status, date(c.valid_until) as valid_until, c.discount, c.comment, c.is_active
          FROM card c
              LEFT JOIN client f ON c.client_id = f.id
              LEFT JOIN passenger p ON c.taxi_passenger_id = p.taxi_passenger_id
              LEFT JOIN dictionary d ON c.card_type = d.id
              LEFT JOIN dictionary di ON c.status = di.id
          WHERE 1=1
            AND c.valid_until >= '{$date->format('Y-m-d')}'
          ";

        try{
            $stmt = $this->pdo->query($sql);
            $result = [];
            while ($row = $stmt->fetch(\PDO::FETCH_ASSOC))
            {
                $result[] = $row;
            }

            return $result;
        }catch(DBALException $e){

        }
    }
}
